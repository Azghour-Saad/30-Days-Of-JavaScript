// Data types can be divided into two:

// 1. Primitive data types:

// primitive and non-primitive data types mean. Primitive data types are immutable(non-modifiable) data types. Once a primitive data type is created we cannot modify it.

// Numbers - Integers, floats
// Strings - Any data under single quote, double quote or backtick quote
// Booleans - true or false value
// Null - empty value or no value
// Undefined - a declared variable without a value
// Symbol - A unique value that can be generated by Symbol constructor function .

// Primitive data types are compared by its values. Let us compare different data values. See the example below :

let numOne = 3;
let numTwo = 3;

console.log(numOne === numTwo);

let js = "JavaScript";
let py = "Python";

console.log(js === py);

let lightOn = true;
let lightOff = false;

console.log(lightOn === lightOff);

//---------------------------------------------------------------------------------------------------------------------

// 2. Non-primitive data types(Object References)

// Arrays - An array of values
// Objects - An object with key-value pairs

// Non-primitive data types are modifiable or mutable. We can modify the value of non-primitive data types after it gets created. Let us see by creating an array. An array is a list of data values in a square bracket. Arrays can contain the same or different data types. Array values are referenced by their index. In JavaScript array index starts at zero. I.e., the first element of an array is found at index zero, the second element at index one, and the third element at index two, etc.

const num = [1, 2, 3, 4, 5];
num[0] = 10;

console.log(num); // [10, 2, 3, 4, 5]

// As you can see, an array, which is a non-primitive data type is mutable. Non-primitive data types cannot be compared by value. Even if two non-primitive data types have the same properties and values, they are not strictly equal.

let nums = [1, 2, 3, 4, 5];
let numbers = [1, 2, 3, 4, 5];

console.log(nums === numbers); // false

let userOne = {
  name: "SAAD",
  role: "teaching",
  country: "enywhere",
};

let userTwo = {
  name: "SAAD",
  role: "teaching",
  country: "enywhere",
};

console.log(userOne === userTwo); // false

// We do not compare non-primitive data types. Do not compare arrays, functions, or objects. Non-primitive values are referred to as reference types, because they are being compared by reference instead of value. Two objects are only strictly equal if they refer to the same underlying object.

let arrayNum = [1, 2, 3, 4, 5];

let anotherArrayNum = arrayNum;

console.log(arrayNum === anotherArrayNum); // true

let userObj = {
  name: "SAAD",
  role: "teaching",
  country: "enywhere",
};

let userObj2 = userObj;

console.log(userObj === userObj2); // true
