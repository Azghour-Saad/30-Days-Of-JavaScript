// Data types can be divided into two:

// 1. Primitive data types:

// primitive and non-primitive data types mean. Primitive data types are immutable(non-modifiable) data types. Once a primitive data type is created we cannot modify it.

// Numbers - Integers, floats
// Strings - Any data under single quote, double quote or backtick quote
// Booleans - true or false value
// Null - empty value or no value
// Undefined - a declared variable without a value
// Symbol - A unique value that can be generated by Symbol constructor function .

// Primitive data types are compared by its values. Let us compare different data values. See the example below :

let numOne = 3;
let numTwo = 3;

console.log(numOne === numTwo);

let js = "JavaScript";
let py = "Python";

console.log(js === py);

let lightOn = true;
let lightOff = false;

console.log(lightOn === lightOff);

//---------------------------------------------------------------------------------------------------------------------

// 2. Non-primitive data types(Object References)

// Arrays - An array of values
// Objects - An object with key-value pairs

// Non-primitive data types are modifiable or mutable. We can modify the value of non-primitive data types after it gets created. Let us see by creating an array. An array is a list of data values in a square bracket. Arrays can contain the same or different data types. Array values are referenced by their index. In JavaScript array index starts at zero. I.e., the first element of an array is found at index zero, the second element at index one, and the third element at index two, etc.

const num = [1, 2, 3, 4, 5];
num[0] = 10;

console.log(num); // [10, 2, 3, 4, 5]

// As you can see, an array, which is a non-primitive data type is mutable. Non-primitive data types cannot be compared by value. Even if two non-primitive data types have the same properties and values, they are not strictly equal.

let nums = [1, 2, 3, 4, 5];
let numbers = [1, 2, 3, 4, 5];

console.log(nums === numbers); // false

let userOne = {
  name: "SAAD",
  role: "teaching",
  country: "enywhere",
};

let userTwo = {
  name: "SAAD",
  role: "teaching",
  country: "enywhere",
};

console.log(userOne === userTwo); // false

// We do not compare non-primitive data types. Do not compare arrays, functions, or objects. Non-primitive values are referred to as reference types, because they are being compared by reference instead of value. Two objects are only strictly equal if they refer to the same underlying object.

let arrayNum = [1, 2, 3, 4, 5];

let anotherArrayNum = arrayNum;

console.log(arrayNum === anotherArrayNum); // true

let userObj = {
  name: "SAAD",
  role: "teaching",
  country: "enywhere",
};

let userObj2 = userObj;

console.log(userObj === userObj2); // true

// ----------------------- - Numbers ----------------------------------------------------
// Numbers are integers and decimal values which can do all the arithmetic operations. Let's see some examples of Numbers.
// Declaring Number Data Types :

let age = 30;
const gravity = 9.8;
let mass = 72;
const PI = 3.14;

console.log(age, gravity, mass, PI);

// ------------------------ - Math Object ------------------------------------------------
// Math Object - A collection of mathematical functions.
// In JavaScript the Math Object provides a lots of methods to work with numbers.

const mathPI = Math.PI;
console.log(mathPI); // 3.141592653589793

// Rounding to the closest number
// if above .5 up if less 0.5 down rounding

console.log(Math.round(mathPI)); // 3
console.log(Math.round(9.8)); // 10
console.log(Math.floor(mathPI)); // 3 ------------- // 3 rounding down
console.log(Math.ceil(mathPI)); // 4 ------------- // 4 rounding up
console.log(Math.min(1, 10, 20, 0, -2)); // -2 ---- // -2 is the smallest number --- // returns the smallest number
console.log(Math.max(-5, 3, 20, 4, 5, 10)); // 20, returns the maximum value of the numbers

const randomNum = Math.random(); // random number between 0 and 0.999999
console.log(randomNum);

// Create random number between 0 to 10
const numRandom = Math.floor(Math.random() * 11); // Create random number between 0 and 10
console.log(numRandom);

// absolute value of a number
const absoluteNum = Math.abs(-10);
console.log(absoluteNum); // 10

// square root of a number
const squareRoot = Math.sqrt(100);
console.log(squareRoot); //10

// power of a number
const powerNum = Math.pow(2, 3);
console.log(powerNum); // 8

// Logarithm
// Returns the natural logarithm with base E of x, Math.log(x)
console.log(Math.E); // 2.718281828459045
console.log(Math.LN2); // 0.6931471805599453
console.log(Math.LN10); // 2.302585092994046

// ----------------------- - Strings ----------------------------------------------------

const space = " "; // an empty space string
const firstName = "SAAD";
const lastName = "AZGHOUR";
const country = "Everywhere";
const city = "Anywhere";
const language = "JavaScript";
const job = "Software Engineer";
const quote = "The saying,'Seeing is Believing' is not correct in 2020.";
const quotWithBackTick = `The saying,'Seeing is Believing' is not correct in 2020.`;

// ----------------------- - Template Literals (Template Strings) ------------------------------------------

// statically writing the data
console.log(`The sum of 2 and 3 is 5`); // The sum of 2 and 3 is 23

const num1 = 3;
const num2 = 3;

// injecting the data dynamically
console.log(`The sum of ${num1} and ${num2} is ${num1 + num2}`); // The sum of 3 and 3 is 6

// ----------------------- - String Methods ----------------------------------------------------
// Everything in JavaScript is an object.
// String Methods - A collection of methods that can be applied to strings.

// A string is a primitive data type that means we can not modify it once it is created. The string object has many string methods. There are different string methods that can help us to work with strings.
// Counting starts from 0. The first index of the string is zero .

const jsp = "JavaScript";

console.log(jsp.length); // 10

const lastIndex = jsp.length - 1;
console.log(lastIndex);

console.log(jsp[lastIndex]); // t

// ----------------------- - substr() ----------------
// It takes two arguments, the starting index and number of characters to slice.

const string = "JavaScript";

console.log(string.substr(0, 3)); // Jav
console.log(string.substr(3, 3)); //aSc

// ----------------------- - substring() ----------------
// It takes two arguments, the starting index and the stopping index but it doesn't include the character at the stopping index.

const anotherString = "JavaScript";
console.log(anotherString.substring(0, 3)); // Jav
console.log(anotherString.substring(3, 6)); // aSc

// ----------------------- - split() ----------------
// The split method splits a string at a specified place.

const dayOfJsp = "30 Days Of JavaScript";

console.log(dayOfJsp.split());

//  Split to an array at each letter
console.log(dayOfJsp.split(""));

// Split to an array at space
console.log(dayOfJsp.split(" ")); // ["30", "Days", "Of", "JavaScript"]

// ----------------------- - trim() ----------------
// Removes trailing space in the beginning or the end of a string.

const trimString = "   30 Days Of JavaScript   ";

console.log(trimString.trim()); // 30 Days Of JavaScript

// ----------------------- - includes() ----------------
// It takes a substring argument and it checks if substring argument exists in the string. includes() returns a boolean. If a substring exist in a string, it returns true, otherwise it returns false.

const includesString = "30 Days Of JavaScript";

console.log(includesString.includes("Days")); // true
console.log(includesString.includes("days")); // false - it is case sensitive
console.log(includesString.includes("Script")); // true
console.log(includesString.includes("java")); // false
console.log(includesString.includes("Java")); // true

// ----------------------- - replace() ----------------
// It takes as a parameter the old substring and a new substring.

const replaceString = "30 Days Of JavaScript";
console.log(replaceString.replace("Days", "Weeks")); // 30 Weeks Of JavaScript

// ----------------------- - charAt() ----------------
// Takes index and it returns the value at that index.

const charAtString = "30 Days Of JavaScript";

console.log(charAtString.charAt(0)); // 3
console.log(charAtString.charAt(1)); // 0
console.log(charAtString.charAt(2)); // 0
console.log(charAtString.charAt(3)); // D

const charAtLastIndex = charAtString.length - 1;
console.log(charAtLastIndex);

console.log(charAtString.charAt(charAtLastIndex)); // t

// ----------------------- - charCodeAt() ----------------
// Takes index and it returns char code (ASCII number) of the value at that index

const charCodeAtString = "30 Days Of JavaScript";

console.log(charCodeAtString.charCodeAt(0)); // 51
console.log(charCodeAtString.charCodeAt(1)); // 48
console.log(charCodeAtString.charCodeAt(3)); // 68

// ----------------------- - indexOf() ----------------
// Takes a substring and if the substring exists in a string it returns the first position of the substring if does not exist it returns -1.

const indexOfString = "30 Days Of JavaScript";

console.log(indexOfString.indexOf("Days")); // 3
console.log(indexOfString.indexOf("days")); // -1
console.log(indexOfString.indexOf("Script")); // 15

// ----------------------- - lastIndexOf() ----------------
// Takes a substring and if the substring exists in a string it returns the last position of the substring if it does not exist it returns -1.

const lastIndexOfString = "30 Days Of JavaScript";

console.log(lastIndexOfString.lastIndexOf("Days")); // 3
console.log(lastIndexOfString.lastIndexOf("days")); // -1
console.log(lastIndexOfString.lastIndexOf("JavaScript")); // 11

// ----------------------- - concat() ----------------
// It takes many substrings and joins them.
// Concat syntax: string.concat(substring, substring, substring)

const fullName = "Saad Azghour";

console.log(`This is my full Name : ${fullName.concat("!!")}`);

// ----------------------- - startsWith() ----------------
// It takes a substring as an argument and it checks if the string starts with that specified substring. It returns a boolean(true or false).

const fullNameStart = "Saad Azghour";

console.log(fullNameStart.startsWith("S"));
console.log(fullNameStart.startsWith("s"));

// ----------------------- - endsWith() ----------------
// It takes a substring as an argument and it checks if the string ends with that specified substring. It returns a boolean(true or false).

const fullNameEnd = "Saad Azghour";

console.log(fullNameEnd.endsWith("r"));
console.log(fullNameEnd.endsWith("R"));
console.log(fullNameEnd.endsWith("Azghour"));
console.log(fullNameEnd.endsWith("Saad Azghour"));

// ----------------------- - search() ----------------
// It takes a substring as an argument and it returns the index of the first match. The search value can be a string or a regular expression pattern, (Regex)

const fullNameSearch = "Saad Azghour";

console.log(fullNameSearch.search("hour"));
console.log(fullNameSearch.search(/azghour/gi)); // with Regex Patttern

// ----------------------- - match() ----------------
// It takes a substring or regular expression pattern as an argument and it returns an array if there is match if not it returns null. Let us see how a regular expression pattern looks like. It starts with / sign and ends with / sign.

const fullNameMatch = "Saad Azghour";

console.log(fullNameMatch.match("Saad"));
console.log(fullNameMatch.match("S"));
console.log(fullNameMatch.match("s")); // null
console.log(fullNameMatch.match(/Azghour/)); // [ 'Azghour', index: 5, input: 'Saad Azghour', groups: undefined ]
console.log(fullNameMatch.match(/azghour/gi));

// Let us extract numbers from text using a regular expression!!
const textNumber =
  "In 2022, I'm super exited to start this challenge at 5/05/2022";

// d with escape character means d not a normal d instead acts a digit
// + means one or more digit numbers,
// if there is g after that it means global, search everywhere.
// i stands for ignore case in the given string. Usually referred to as case-insensitive.

const regex = /\d+/gi;
console.log(textNumber.match(regex));

// ----------------------- - repeat() ----------------
// It takes a number as argument and it returns the repeated version of the string.

const fullNameRepeat = "Saad Azghour";
console.log(fullNameRepeat.repeat(4)); // Saad AzghourSaad AzghourSaad AzghourSaad Azghour

// ----------------------- - 4 Checking Data Types and Casting --------------------------------
// 1.1 -----------------------Checking Data Types !!

// To check the data type of a certain variable we use the typeof methos!!
// Example :
// Different javascript data types
// Let's declare different data types!!

const firstNameType = "Saad"; // string
const lastNameType = "Azghour"; // string
const countryType = "Morocco"; // string
const cityType = "Essaouira"; // string
const ageType = 250; // number, it is not my real age, do not worry about it

let jobType; // undefined, because a value was not assigned!!

console.log(typeof "Saad"); // string
console.log(typeof firstName); // string
console.log(typeof 10); // number
console.log(typeof 3.14); // number
console.log(typeof true); // boolean
console.log(typeof false); // boolean
console.log(typeof NaN); // number
console.log(typeof jobType); // undefined
console.log(typeof undefined); // undefined
console.log(typeof null); // object

// 1.2 -----------------------Changing Data Type (Casting) !!
// Casting: Converting one data type to another data type.
// We use parseInt(), parseFloat(), Number(), + sign, str() When we do arithmetic operations string numbers should be first converted to integer or float if not it returns an error.
// ----------------------------------------------------------------
// String to Int .
// We can convert string number to a number. Any number inside a quote is a string number. An example of a string number: '10', '5', etc. We can convert string to number using the following methods:

// parseInt()
// Number()
// Plus sign(+)

console.log(typeof parseInt("10"));
console.log(typeof Number("10"));
console.log(typeof +"10"); // number

// ----------------------------------------------------------------
// String to Float

// We can convert string float number to a float number. Any float number inside a quote is a string float number. An example of a string float number: '9.81', '3.14', '1.44', etc. We can convert string float to number using the following methods:

// parseFloat()
// Number()
// Plus sign(+)

console.log(typeof parseFloat("9.81"));
console.log(typeof Number("10"));
console.log(typeof +"10"); // number

// ----------------------------------------------------------------
// Float to Int
// We can convert float numbers to integers. We use the following method to convert float to int:
// parseInt()

console.log(parseInt("9.81")); // 9

// 1.3 ----------------------- Exercises !!
// Declare a variable named challenge and assign it to an initial value '30 Days Of JavaScript'.
const challenge = "30 Days of Javascript";
// Print the string on the browser console using console.log()
console.log(`I will print my Full Name : Saad Azghour`);
// Print the length of the string on the browser console using console.log()
console.log(`I will print my Full Name : Saad Azghour`.length);
// Change all the string characters to capital letters using toUpperCase() method.
console.log("i will print my full name : saad azghour".toUpperCase());
// Change all the string characters to lowercase letters using toLowerCase() method
console.log("I WILL PRINT MY FULL NAME : SAAD AZGHOUR".toLowerCase());
// Cut (slice) out the first word of the string using substr() or substring() method
console.log("Saad Azghour".substr(0, 1));
console.log("Saad Azghour".substring(0, 1));
// Slice out the phrase Days Of JavaScript from 30 Days Of JavaScript.
console.log("30 Days Of JavaScript".slice(2));
// Check if the string contains a word Script using includes() method
console.log("30 Days Of JavaScript".includes("Script")); // true
// Split the string into an array using split() method
console.log("30 Days Of JavaScript".split(""));
// Split the string 30 Days Of JavaScript at the space using split() method
console.log("30 Days Of JavaScript".split(" "));
// 'Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon' split the string at the comma and change it to an array.
console.log(
  "Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon".split(",")
);
// Change 30 Days Of JavaScript to 30 Days Of Python using replace() method.
console.log("30 Days Of JavaScript".replace("JavaScript", "Python"));
// What is character at index 15 in '30 Days Of JavaScript' string? Use charAt() method.
console.log("30 Days Of JavaScript".charAt(15));
// What is the character code of J in '30 Days Of JavaScript' string using charCodeAt()
console.log("30 Days Of JavaScript".charCodeAt(15));

// Use indexOf to determine the position of the first occurrence of a in 30 Days Of JavaScript
console.log("30 Days Of JavaScript".indexOf("30")); // 0
// Use lastIndexOf to determine the position of the last occurrence of a in 30 Days Of JavaScript.
console.log("30 Days Of JavaScript".lastIndexOf("JavaScript")); // 11

// Use indexOf to find the position of the first occurrence of the word because in the following sentence:'You cannot end a sentence with because because because is a conjunction'
console.log(
  "You cannot end a sentence with because because because is a conjunction".indexOf(
    "because"
  )
); // 31

// Use lastIndexOf to find the position of the last occurrence of the word because in the following sentence:'You cannot end a sentence with because because because is a conjunction'

console.log(
  "You cannot end a sentence with because because because is a conjunction".lastIndexOf(
    "because"
  )
); // 47

// Use search to find the position of the first occurrence of the word because in the following sentence:'You cannot end a sentence with because because because is a conjunction'

console.log(
  "You cannot end a sentence with because because because is a conjunction".search(
    "because"
  )
); // 31

// Use trim() to remove any trailing whitespace at the beginning and the end of a string.E.g ' 30 Days Of JavaScript '.
console.log(" 30 Days Of JavaScript ".trim());
// Use startsWith() method with the string 30 Days Of JavaScript and make the result true
console.log("30 Days Of JavaScript".startsWith("3")); // true
// Use endsWith() method with the string 30 Days Of JavaScript and make the result true
console.log("30 Days Of JavaScript".endsWith("t")); // true
// Use match() method to find all the a in 30 Days Of JavaScript
console.log("30 Days Of JavaScript".match("a"));
// Use concat() and merge '30 Days of' and 'JavaScript' to a single string, '30 Days Of JavaScript'
console.log("30 Days Of".concat("JavaScript"));
// Use repeat() method to print 30 Days Of JavaScript 2 times
console.log("30 Days Of JavaScript ".repeat(2));

// 1.4 ----------------------- Exercises !!
// Using console.log() print out the following statement:

console.log(
  "The quote 'There is no exercise better for the heart than reaching down and lifting people up.' by John Holmes teaches us to help one another."
);

// Using console.log() print out the following quote by Mother Teresa:
console.log(
  "Love is not patronizing and charity isn't about pity, it is about love. Charity and love are the same -- with charity you give love, so don't just give money but reach out your hand instead."
);

// Check if typeof '10' is exactly equal to 10. If not make it exactly equal.
console.log(typeof +"10" === typeof 10);
// Check if parseFloat('9.8') is equal to 10 if not make it exactly equal with 10.
console.log(typeof parseFloat("9.8") === typeof 10); // true
// Check if 'on' is found in both python and jargon
const includesStringBoth = "python and jargon";
console.log(includesStringBoth.includes("on")); // true
// I hope this course is not full of jargon. Check if jargon is in the sentence.
const includesJargon = "I hope this course is not full of jargon";
console.log(includesJargon.includes("jargon")); // true
// Generate a random number between 0 and 100 inclusively.
const randomInclusively = Math.floor(Math.random() * 101);
console.log(randomInclusively);
// Generate a random number between 50 and 100 inclusively.
// You need to know the range of the random.
// Between 50 and 100, the range is 50 (100 - 50 = 50), then you add 1.
// Therefor, the random would look like this :
const randomNumBetween = Math.floor(Math.random() * 51) + 50;
console.log(randomNumBetween);
// Generate a random number between 0 and 255 inclusively.
const generateRandom = Math.floor(Math.random() * 256);
console.log(generateRandom);
// Access the 'JavaScript' string characters using a random number.
const stringAccess = "Javascript";
const randomNumber = Math.floor(Math.random() * stringAccess.length);
// console.log(randomNumber);
console.log(stringAccess.substring(randomNumber, randomNumber + 1));
// Use console.log() and escape characters to print the following pattern.
/*
    1 1 1 1 1
    2 1 2 4 8
    3 1 3 9 27
    4 1 4 16 64
    5 1 5 25 125
*/

console.log("1 1 1 1 1\n2 1 2 4 8\n3 1 3 9 27\n4 1 4 16 64\n5 1 5 25 125");
// Use substr to slice out the phrase because because because from the following sentence:'You cannot end a sentence with because because because is a conjunction'
const phrase =
  "You cannot end a sentence with because because because is a conjunction";

const pattern = /because/gi;
console.log(phrase.slice(31, 54));
console.log(phrase.match(pattern));

console.log(
  "You cannot end a sentence with because because because is a conjunction"
);
